@model DomainLayer.Models.MeatInspectionReceivingReport
@using DomainLayer.Enum;
@{

}
<link href="~/css/inspectorSideNav.css" rel="stylesheet" asp-append-version="true" />
<link href="~/css/createMeatCheck.css" rel="stylesheet" asp-append-version="true" />

<style>
    #content .FirstLayer .applications h3 {
        font-size: 40px;
        font-weight: 600;
        margin-top: 5px;
        margin-bottom: 5px;
        margin-left: 5px;
        color: var(--black);
    }

    .backbtn {
        margin-left: 5px;
    }
</style>

<section id="content">
    <!-- MAIN STARTS-->
    <main class="registration">
        @*<div class="FirstLayer">
        </div>*@
        @*<div class="FirstLayer">
        <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Receiving/Acceptance</li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>

        </ol>
        </nav>
        </div>*@
        <div>
            <a class="backbtn" asp-action="Index">Back to List</a>
        </div>
        <div class="FirstLayer">
            <div class="applications">
                <h3>Edit | Receiving Report</h3>
                <hr />
                @if (User.IsInRole("MeatInspector"))
                {
                    <a asp-action="Index">
                        <button class="btn btn-primary">Back</button>
                    </a>
                    <br />
                    <div class="row">
                        <div class="col-md-4">
                            <form asp-action="Edit">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="Id" />
                                <div class="form-group">
                                    <label asp-for="ReceivedDate" class="control-label">Date & Time:</label>
                                    <input asp-for="ReceivedDate" class="form-control"  />
                                    <span asp-validation-for="ReceivedDate" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Species" class="control-label">Specie:</label>
                                    <input asp-for="Species" class="form-control" disabled />
                                    <span asp-validation-for="Species" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="NumberOfHeads" class="control-label">No. Of Heads:</label>
                                    <input asp-for="NumberOfHeads" class="form-control" disabled />
                                    <span asp-validation-for="NumberOfHeads" class="text-danger"></span>
                                </div>
                                <div class="input-box">
                                    <label asp-for="LiveWeight" class="control-label">Live Weight:</label>
                                    <input asp-for="LiveWeight" class="form-control" disabled />
                                    <span asp-validation-for="LiveWeight" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="MeatDealersId" class="control-label">Meat Dealer:</label>
                                    <select asp-for="MeatDealersId" class="form-control" asp-items="ViewBag.MeatDealersId" disabled></select>
                                    <span asp-validation-for="MeatDealersId" class="text-danger"></span>
                                </div>

                                <br />
                                <div class="form-group">

                                    @* <a class="btn btn-primary" asp-controller="ConductOfInspections" asp-action="Create">Next</a>*@
                                </div>
                                @*<div class="form-group">
                            <input type="submit" value="Next" class="btn btn-primary" />
                            <br />
                            <a class="btn btn-primary" asp-controller="ConductOfInspections" asp-action="Create">Next</a>
                            </div>*@
                            </form>
                            <form method="post" action="/ReceivingReports/actionResult">
                                <input type="hidden" name="Id" value="@Model.Id" />
                                <button type="submit" class="btn btn-warning">Inspect</button>
                            </form>
                        </div>
                    </div>

                    <div>
                    </div>
                }

                @if (User.IsInRole("MeatEstablishmentRepresentative"))
                {
                    <form asp-action="Edit" class="form">
                        <div class="column">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="input-box">
                                <labReceivedDatefor="RecTime" class="control-label">Date & Time:</label>
                                <inpReceivedDatefor="RecTime" class="form-control" id="recTimeInput" readonly />
                                <span asp-valiReceivedDatefor="RecTime" class="text-danger"></span>
                            </div>
                            <div class="input-box">
                                <label asp-for="BatchCode" class="control-label">Batch Code:</label>
                                <input asp-for="BatchCode" class="form-control" />
                                <span asp-validation-for="BatchCode" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="column">
                            <div class="input-box">
                                <label asp-for="Species" class="control-label">Specie:</label>
                                <select asp-for="Species" class="form-control" asp-items="@Html.GetEnumSelectList<Species>()">
                                    <option>--Select--</option>
                                </select>
                            </div>
                            <div class="input-box">
                                <label asp-for="Category" class="control-label">Category:</label>
                                <select asp-for="Category" class="form-control" asp-items="@Html.GetEnumSelectList<CategoryOfFoodAnimals>()">
                                    <option>--Select--</option>
                                </select>
                            </div>
                            <div class="input-box">
                                <label asp-for="MeatDealersId" class="control-label">Meat Dealer:</label>
                                <select asp-for="MeatDealersId" class="form-control" asp-items="ViewBag.MeatDealersId">
                                    <option> --- Select ---</option>
                                </select>
                            </div>
                        </div>
                        <div class="column">
                            <div class="input-box">
                                <label asp-for="NumberOfHeads" class="control-label">No. Of Heads:</label>
                                <input asp-for="NumberOfHeads" class="form-control" />
                                <span asp-validation-for="NumberOfHeads" class="text-danger"></span>
                            </div>
                            <div class="input-box">
                                <label asp-for="LiveWeight" class="control-label">Live Weight:</label>
                                <input asp-for="LiveWeight" class="form-control" />
                                <span asp-validation-for="LiveWeight" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="column">

                            @* <div class="input-box">
                        <label asp-for="Origin" class="control-label"></label>
                        <input asp-for="Origin" class="form-control" />
                        <span asp-validation-for="Origin" class="text-danger"></span>
                        </div>*@
                            <div class="input-box address">

                                <label asp-for="Origin" class="control-label">Origin:</label>
                                <div class="input-box">
                                    <input asp-for="Origin" class="form-control" id="addressInput" />
                                    <span asp-validation-for="Origin" class="text-danger"></span>
                                </div>

                                <div class="column">
                                    <div class="select-box">
                                        <select id="regionSelect" onchange="populateProvinces()">
                                            <option hidden>Region</option>
                                            <!-- Add region options here -->
                                        </select>
                                    </div>
                                    <div class="select-box">
                                        <select id="provinceSelect" onchange="populateCities()">
                                            <option hidden>Province</option>
                                            <!-- Add province options here -->
                                        </select>
                                    </div>
                                </div>
                                <div class="column">
                                    <div class="select-box">
                                        <select id="citySelect" onchange="populateBarangays()">
                                            <option hidden>City/Municipality</option>
                                            <!-- Add city options here -->
                                        </select>
                                    </div>
                                    <div class="select-box">
                                        <select id="barangaySelect" onchange="updateAddressInput()">
                                            <option hidden>Barangay</option>
                                            <!-- Add barangay options here -->
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <script>
                                function updateAddressInput() {
                                    // Get the selected values from the dropdowns
                                    var barangay = document.getElement("barangaySelect").value;
                                    var city = document.getElementById("citySelect").value;
                                    var province = document.getElementById("provinceSelect").value;
                                    var region = document.getElementById("regionSelect").value;



                                    // Construct the address using the selected values
                                    var address = barangay + ", " + city + ", " + province + ", " + region;

                                    // Update the value of the address input box
                                    document.getElementBy("addressInput").value = Address;
                                }
                            </script>
                        </div>
                        <div class="inpShippingDocuments                           <label asp-for="ShippingDoc" class="control-label">Shipping Documents:ShippingDocuments                           <input asp-for="ShippingDoc" id="selectedShippingDocs">
ShippingDocuments                 <span asp-validation-for="ShippingDoc" class="text-danger"></span>
                            <div class="checkbox-list">
                                <div class="checkbox-row">
                                    <label>
                                        <input type="checkbox" name="ShippingDoc" value="CertificateOfOwnerShip">
                                        Certificate Of Ownership
                                    </label>
                                    <label>
                                        <input type="checkbox" name="ShippingDoc" value="CertificateOfTransfer">
                                        Certificate Of Transfer
                                    </label>
                                </div>
                                <div class="checkbox-row">
                                    <label>
                                        <input type="checkbox" name="ShippingDoc" value="VeterinaryHealthCertificate">
                                        Veterinary Health Certificate
                                    </label>
                                    <label>
                                        <input type="checkbox" name="ShippingDoc" value="ShippingPermit">
                                        Shipping Permit
                                    </label>
                                </div>
                            </div>

                        </div>
                        <script>
                            const checkboxes = document.querySelectorAll('input[type="checkbox"][name="ShippingDoc"]');
                            const hiddenInput = document.getElementById('selectedShippingDocs');

                            checkboxes.forEach(checkbox => {
                                checkbox.addEventListener('change', () => {
                                    const selectedDocs = Array.from(checkboxes)
                                        .filter(cb => cb.checked)
                                        .map(cb => cb.value)
                                        .join(',');

                                    hiddenInput.value = selectedDocs;
                                });
                            });
                        </script>
                        <div class="column">
                            <div class="input-box">
                                <label asp-for="HoldingPenNo" class="control-label">Holding Pen No.:</label>
                                <input asp-for="HoldingPenNo" class="form-control" />
                                <span asp-validation-for="HoldingPenNo" class="text-danger"></span>
                            </div>
                            <div class="input-box">
                                <label asp-for="ReceivingBy" class="control-label">Received By:</label>
                                <input asp-for="ReceivingBy" class="form-control" />
                                <span asp-validation-for="ReceivingBy" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="column">
                            <div class="input-box" sProcessedByIdone;">
                                <label asp-for="AccountDetailsId" class="control-label"></label>
 ProcessedById               <input id="accountDetailsInput" asp-for="AccountDetailsId" class="form-control" />
                            </div>
                        </div>
                        <div class="input-box">
                            <label asp-for="InspectionStatus" class="control-label">Inspection Status:</label>
                            <select asp-for="InspectionStatus" class="form-control">
                                <option>Pending</option>
                            </select>
                        </div>
                        <button type="submit" value="Create">Save</button>
                    </form>
                }



                @section Scripts {
                    @{
                        await Html.RenderPartialAsync("_ValidationScriptsPartial");
                    }
                }
            </div>
        </div>

    </main>
</section>

<script src="~/js/register.js"></script>
<script>
    //integration of Philippines Address JSON
    fetch('@Url.Content("https://raw.githubusercontent.com/Adrianne1001/Geojson-and-address-JSON/main/philippine_provinces_cities_municipalities_and_barangays_2019v2.json")')
        .then(response => response.json())
        .then(data => {
            const regionSelect = document.getElementById('regionSelect');
            const provinceSelect = document.getElementById('provinceSelect');
            const citySelect = document.getElementById('citySelect');
            const barangaySelect = document.getElementById('barangaySelect');
            var addressInput = document.getElementById('addressInput');

            // Define the desired order of regions
            const regionOrder = [
                { regionCode: "NCR", regionName: "National Capital Region" },
                { regionCode: "CAR", regionName: "Cordillera Administrative Region" },
                { regionCode: "01", regionName: "Region I" },
                { regionCode: "02", regionName: "Region II" },
                { regionCode: "03", regionName: "Region III" },
                { regionCode: "4A", regionName: "Region IV-A" },
                { regionCode: "4B", regionName: "Region IV-B" },
                { regionCode: "05", regionName: "Region V" },
                { regionCode: "06", regionName: "Region VI" },
                { regionCode: "07", regionName: "Region VII" },
                { regionCode: "08", regionName: "Region VIII" },
                { regionCode: "09", regionName: "Region IX" },
                { regionCode: "10", regionName: "Region X" },
                { regionCode: "11", regionName: "Region XI" },
                { regionCode: "12", regionName: "Region XII" },
                { regionCode: "13", regionName: "Region XIII" },
                { regionCode: "BARMM", regionName: "Bangsamoro Autonomous Region in Muslim Mindanao" }
            ];

            // Populate regions dropdown
            regionOrder.forEach(region => {
                const option = document.createElement('option');
                option.value = region.regionCode;
                option.textContent = region.regionName;
                regionSelect.appendChild(option);
            });

            // Function to populate provinces based on the selected region
            function populateProvinces() {
                const selectedRegion = regionSelect.value;
                provinceSelect.innerHTML = "<option hidden>Select Province</option>";
                citySelect.innerHTML = "<option hidden>Select City/Municipality</option>";
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "") {
                    const regionData = data[selectedRegion];
                    const provinceList = regionData.province_list;

                    for (const [provinceCode, province] of Object.entries(provinceList)) {
                        const option = document.createElement('option');
                        option.value = provinceCode;
                        option.textContent = provinceCode;
                        provinceSelect.appendChild(option);
                    }
                }
            }

            // Function to populate cities/municipalities based on the selected province
            function populateCities() {
                const selectedRegion = regionSelect.value;
                const selectedProvince = provinceSelect.value;
                citySelect.innerHTML = "<option hidden>Select City/Municipality</option>";
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "" && selectedProvince !== "") {
                    const regionData = data[selectedRegion];
                    const provinceData = regionData.province_list[selectedProvince];
                    const municipalityList = provinceData.municipality_list;

                    for (const [municipalityCode, municipality] of Object.entries(municipalityList)) {
                        const option = document.createElement('option');
                        option.value = municipalityCode;
                        option.textContent = municipalityCode;
                        citySelect.appendChild(option);
                    }
                }
            }

            // Function to populate barangays based on the selected city/municipality
            function populateBarangays() {
                const selectedRegion = regionSelect.value;
                const selectedProvince = provinceSelect.value;
                const selectedCity = citySelect.value;
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "" && selectedProvince !== "" && selectedCity !== "") {
                    const regionData = data[selectedRegion];
                    const provinceData = regionData.province_list[selectedProvince];
                    const municipalityData = provinceData.municipality_list[selectedCity];
                    const barangayList = municipalityData.barangay_list;

                    for (const barangay of barangayList) {
                        const option = document.createElement('option');
                        option.value = barangay;
                        option.textContent = barangay;
                        barangaySelect.appendChild(option);
                    }
                }
            }
            function updateAddress() {
                var regionSelect = document.getElementById('regionSelect');
                var provinceSelect = document.getElementById('provinceSelect');
                var citySelect = document.getElementById('citySelect');
                var barangaySelect = document.getElementById('barangaySelect');
                var addressInput = document.getElementById('addressInput');

                var region = regionSelect.value || '';
                var province = provinceSelect.value || '';
                var city = citySelect.value || '';
                var barangay = barangaySelect.value || '';

                var address = region + ', ' + province + ', ' + city + ', ' + barangay;
                addressInput.value = address;
            }


            // Add event listeners to call the populate functions on change
            regionSelect.addEventListener('change', populateProvinces);
            provinceSelect.addEventListener('change', populateCities);
            citySelect.addEventListener('change', populateBarangays);
            document.getElementById('regionSelect').addEventListener('change', updateAddress);
            document.getElementById('provinceSelect').addEventListener('change', updateAddress);
            document.getElementById('citySelect').addEventListener('change', updateAddress);
            document.getElementById('barangaySelect').addEventListener('change', updateAddress);
        })
        .catch(error => console.error('Error fetching JSON:', error));

</script>

}