@using thesis.Core.ViewModel;
@using thesis.Data.Enum;
@model SummaryViewModel;
@using Azure.Core;

<script src="~/js/register.js"></script>
<link href="~/css/inspectorSideNav.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/register.css" asp-append-version="true">
@{
    ViewData["Title"] = "Create";
}
<section id="content">


    <!-- MAIN STARTS-->
    <main class="registration">

        <div class="FirstLayer">
            <h3>Summary And Distribution of MICs</h3>
            <hr />
        </div>
        <div class="FirstLayer">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item"><a href="#">Receiving-Acceptance</a></li>
                    <li class="breadcrumb-item"><a href="#">Antemortem</a></li>
                    <li class="breadcrumb-item"><a href="#">Passed</a></li>
                    <li class="breadcrumb-item"><a href="#">Postmortem</a></li>
                    <li class="breadcrumb-item"><a href="#">Total Number</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Summary</li>
                </ol>
            </nav>
        </div>


        <div class="container">


            @*    <h1>Create</h1>*@


            <a asp-action="Index">Back to List</a>

            <form class="form" asp-action="Create">
                <div class="column">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="input-box">
                        <label asp-for="TotalNoFitForHumanConsumptionId" class="control-label"></label>
                        <select asp-for="TotalNoFitForHumanConsumptionId" class="form-control" asp-items="ViewBag.TotalNoFitForHumanConsumptionId"></select>
                    </div>
                    <div class="input-box">
                        <label asp-for="DestinationName" class="control-label"></label>
                        <input asp-for="DestinationName" class="form-control" />
                        <span asp-validation-for="DestinationName" class="text-danger"></span>
                    </div>
                    <div class="input-box">
                        <label asp-for="DestinationAddress" class="control-label"></label>
                        <input asp-for="DestinationAddress" class="form-control" id="addressInput" />
                        <span asp-validation-for="DestinationAddress" class="text-danger"></span>
                    </div>
                </div>


                <div class="input-box address">

                    <div class="column">
                        <div class="select-box">
                            <select id="regionSelect" onchange="populateProvinces()">
                                <option hidden>Region</option>
                                <!-- Add region options here -->
                            </select>
                        </div>
                        <div class="select-box">
                            <select id="provinceSelect" onchange="populateCities()">
                                <option hidden>Province</option>
                                <!-- Add province options here -->
                            </select>
                        </div>
                    </div>
                    <div class="column">
                        <div class="select-box">
                            <select id="citySelect" onchange="populateBarangays()">
                                <option hidden>City/Municipality</option>
                                <!-- Add city options here -->
                            </select>
                        </div>
                        <div class="select-box">
                            <select id="barangaySelect" onchange="updateAddressInput()">
                                <option hidden>Barangay</option>
                                <!-- Add barangay options here -->
                            </select>
                        </div>
                    </div>
                </div>



                <script>
                    function updateAddressInput() {
                        // Get the selected values from the dropdowns
                        var barangay = document.getElement("barangaySelect").value;
                        var city = document.getElementById("citySelect").value;
                        var province = document.getElementById("provinceSelect").value;
                        var region = document.getElementById("regionSelect").value;



                        // Construct the address using the selected values
                        var address = barangay + ", " + city + ", " + province + ", " + region;

                        // Update the value of the address input box
                        document.getElementBy("addressInput").value = DestinationAddress;
                    }
                </script>
                <br />
                <div class="form-group">
                    <label asp-for="CertificateStatus" class="control-label"></label>
                    <select asp-for="CertificateStatus" class="form-control" asp-items="@Html.GetEnumSelectList<CertificateStatus>()">
                        <option>--Select--</option>
                    </select>
                    <span asp-validation-for="CertificateStatus" class="text-danger"></span>
                </div>
                <br />

                <button type="submit" value="Create">Create</button>

            </form>

            <div>
            </div>

            @section Scripts {
                @{
                    await Html.RenderPartialAsync("_ValidationScriptsPartial");
                }
            }

        </div>

        <div class="FirstLayer">

            <div class="applications">
                <div class="applications">
                    <div class="search">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search..." />
                    </div>

                    <script>
                        $(document).ready(function () {
                            $('#searchInput').on('input', function () {
                                var searchText = $(this).val().toLowerCase();
                                $('.filter-item').each(function () {
                                    var rowText = $(this).text().toLowerCase();
                                    if (rowText.indexOf(searchText) === -1) {
                                        $(this).hide();
                                    } else {
                                        $(this).show();
                                    }
                                });
                            });
                        });
                    </script>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Type of Meat
                                </th>
                                <th>
                                    No. of Heads
                                </th>
                                <th>
                                    Weight()
                                </th>
                                <th>
                                    Destination Name
                                </th>
                                <th>
                                    Destination Address
                                </th>
                                <th>
                                    Certificate Status
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Summary)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalNoFitForHumanConsumption.Species)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalNoFitForHumanConsumption.NoOfHeads)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TotalNoFitForHumanConsumption.DressedWeight)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DestinationName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DestinationAddress)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CertificateStatus)
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
                <br />

                <div class="button">
                    <a class="btn btn-dark " asp-controller="ReceivingReports" asp-action="Index"> <span>Done</span> <i class="bx bx-check"> </i> </a>
                </div>

            </div>
        </div>

    </main>
    <!-- MAIN ENDS -->

</section>

<script src="~/js/register.js"></script>
<script>
    //integration of Philippines Address JSON
    fetch('@Url.Content("~/philippine_provinces_cities_municipalities_and_barangays_2019v2.json")')
        .then(response => response.json())
        .then(data => {
            const regionSelect = document.getElementById('regionSelect');
            const provinceSelect = document.getElementById('provinceSelect');
            const citySelect = document.getElementById('citySelect');
            const barangaySelect = document.getElementById('barangaySelect');
            var addressInput = document.getElementById('addressInput');

            // Define the desired order of regions
            const regionOrder = [
                { regionCode: "NCR", regionName: "National Capital Region" },
                { regionCode: "CAR", regionName: "Cordillera Administrative Region" },
                { regionCode: "01", regionName: "Region I" },
                { regionCode: "02", regionName: "Region II" },
                { regionCode: "03", regionName: "Region III" },
                { regionCode: "04A", regionName: "Region IV-A" },
                { regionCode: "04B", regionName: "Region IV-B" },
                { regionCode: "05", regionName: "Region V" },
                { regionCode: "06", regionName: "Region VI" },
                { regionCode: "07", regionName: "Region VII" },
                { regionCode: "08", regionName: "Region VIII" },
                { regionCode: "09", regionName: "Region IX" },
                { regionCode: "10", regionName: "Region X" },
                { regionCode: "11", regionName: "Region XI" },
                { regionCode: "12", regionName: "Region XII" },
                { regionCode: "13", regionName: "Region XIII" },
                { regionCode: "BARMM", regionName: "Bangsamoro Autonomous Region in Muslim Mindanao" }
            ];

            // Populate regions dropdown
            regionOrder.forEach(region => {
                const option = document.createElement('option');
                option.value = region.regionCode;
                option.textContent = region.regionName;
                regionSelect.appendChild(option);
            });

            // Function to populate provinces based on the selected region
            function populateProvinces() {
                const selectedRegion = regionSelect.value;
                provinceSelect.innerHTML = "<option hidden>Select Province</option>";
                citySelect.innerHTML = "<option hidden>Select City/Municipality</option>";
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "") {
                    const regionData = data[selectedRegion];
                    const provinceList = regionData.province_list;

                    for (const [provinceCode, province] of Object.entries(provinceList)) {
                        const option = document.createElement('option');
                        option.value = provinceCode;
                        option.textContent = provinceCode;
                        provinceSelect.appendChild(option);
                    }
                }
            }

            // Function to populate cities/municipalities based on the selected province
            function populateCities() {
                const selectedRegion = regionSelect.value;
                const selectedProvince = provinceSelect.value;
                citySelect.innerHTML = "<option hidden>Select City/Municipality</option>";
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "" && selectedProvince !== "") {
                    const regionData = data[selectedRegion];
                    const provinceData = regionData.province_list[selectedProvince];
                    const municipalityList = provinceData.municipality_list;

                    for (const [municipalityCode, municipality] of Object.entries(municipalityList)) {
                        const option = document.createElement('option');
                        option.value = municipalityCode;
                        option.textContent = municipalityCode;
                        citySelect.appendChild(option);
                    }
                }
            }

            // Function to populate barangays based on the selected city/municipality
            function populateBarangays() {
                const selectedRegion = regionSelect.value;
                const selectedProvince = provinceSelect.value;
                const selectedCity = citySelect.value;
                barangaySelect.innerHTML = "<option hidden>Select Barangay</option>";

                if (selectedRegion !== "" && selectedProvince !== "" && selectedCity !== "") {
                    const regionData = data[selectedRegion];
                    const provinceData = regionData.province_list[selectedProvince];
                    const municipalityData = provinceData.municipality_list[selectedCity];
                    const barangayList = municipalityData.barangay_list;

                    for (const barangay of barangayList) {
                        const option = document.createElement('option');
                        option.value = barangay;
                        option.textContent = barangay;
                        barangaySelect.appendChild(option);
                    }
                }
            }
            function updateAddress() {
                var regionSelect = document.getElementById('regionSelect');
                var provinceSelect = document.getElementById('provinceSelect');
                var citySelect = document.getElementById('citySelect');
                var barangaySelect = document.getElementById('barangaySelect');
                var addressInput = document.getElementById('addressInput');

                var region = regionSelect.value || '';
                var province = provinceSelect.value || '';
                var city = citySelect.value || '';
                var barangay = barangaySelect.value || '';

                var address = region + ', ' + province + ', ' + city + ', ' + barangay;
                addressInput.value = address;
            }


            // Add event listeners to call the populate functions on change
            regionSelect.addEventListener('change', populateProvinces);
            provinceSelect.addEventListener('change', populateCities);
            citySelect.addEventListener('change', populateBarangays);
            document.getElementById('regionSelect').addEventListener('change', updateAddress);
            document.getElementById('provinceSelect').addEventListener('change', updateAddress);
            document.getElementById('citySelect').addEventListener('change', updateAddress);
            document.getElementById('barangaySelect').addEventListener('change', updateAddress);
        })
        .catch(error => console.error('Error fetching JSON:', error));

</script>