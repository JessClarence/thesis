@using thesis.Data.Enum;
@model IEnumerable<thesis.Models.ReceivingReport>
@using Microsoft.AspNetCore.Identity;
@using thesis.Areas.Identity.Data;

@inject SignInManager<AccountDetails> SignInManager
@inject UserManager<AccountDetails> UserManager

@{
    ViewData["Title"] = "Index";
    if (!string.IsNullOrEmpty(ViewBag.AlertMessage))
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'bottom-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });

            Toast.fire({
                icon: 'success',
                title: '@ViewBag.AlertMessage'
            });
        </script>
    }
    if (!string.IsNullOrEmpty(ViewBag.AlertMessagee))
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'bottom-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }-
                        });

            Toast.fire({
                icon: 'success',
                title: '@ViewBag.AlertMessagee'
            });
        </script>
    }


}
<link href="~/css/inspectorsidenav.css" rel="stylesheet" />
<section id="content">


    <!-- MAIN STARTS-->

    <main>
        <div class="FirstLayer">
            <h3>Daily Receiving / Acceptance of Food Animals</h3>
        </div>
        <div class="FirstLayer">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Receiving/Acceptance</li>
                </ol>
            </nav>
        </div>

        <div class="form-group">
            <label for="startdate">Start Date</label>
            <input onchange="filterDataDate()" type="date" id="startdate" class="filter">

            <label for="enddate">End Date</label>
            <input onchange="filterDataDate()" type="date" id="enddate" class="filter">
        </div>



        <div class="FirstLayer">

            <div class="applications">

                @if (User.IsInRole("MeatEstablishmentRepresentative"))
                {
                    <p>
                        <a asp-action="Create">Create New</a>
                    </p>
                    <br />
                }
                <div class="search">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search..." />
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Date & Time
                            </th>
                            <th>
                                Batch Code
                            </th>
                            <th>
                                Specie
                            </th>
                            <th>
                                Category
                            </th>
                            <th>
                                No. Of Heads
                            </th>
                            <th>
                                Live Weight
                            </th>
                            <th>
                                Meat Dealer
                            </th>
                            <th>
                                Origin
                            </th>
                            <th>
                                Shipping Documents
                            </th>
                            <th>
                                Holding Pen No.
                            </th>
                            <th>
                                Received By
                            </th>
                            <th>
                                Representative
                            </th>
                            <th>
                                Status
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            // Assuming accountId is the specific AccountDetails id you want to filter by
                            string accountId = UserManager.GetUserId(User);
                            var filteredModel = Model;

                            if (User.IsInRole("MeatEstablishmentRepresentative") || User.IsInRole("MeatInspector"))
                            {
                                // Fetch the MeatEstablishmentId of the logged-in user from the UserManager (assuming it has the necessary extension method to fetch user details).
                                var loggedInUser = await UserManager.GetUserAsync(User);

                                // Explicitly cast the meatEstablishmentId to a non-nullable int and provide a default value of 0 if it's null.
                                int meatEstablishmentId = loggedInUser.MeatEstablishmentId ?? 0;

                                // Filter the Model based on the MeatEstablishmentId
                                //filteredModel = Model.Where(item => item.AccountDetails.MeatEstablishmentId == meatEstablishmentId);
                            }
                            else if (User.IsInRole("InspectorAdmin"))
                            {
                                // No filtering required for InspectorAdmin, so keep the original Model.
                                filteredModel = Model;
                            }
                        }
                        @foreach (var item in filteredModel)
                        {
                            <tr class="filter-item">
                                @*<td>
                            @Html.DisplayFor(modelItem => item.Id)
                            </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.RecTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BatchCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Species)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NoOfHeads)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LiveWeight)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MeatDealers.FirstName )
                                    @Html.DisplayFor(modelItem => item.MeatDealers.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Origin)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ShippingDoc)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HoldingPenNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReceivingBy)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountDetails.firstName)
                                    @Html.DisplayFor(modelItem => item.AccountDetails.lastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InspectionStatus)
                                </td>




                                @if (User.IsInRole("MeatInspector"))
                                {
                                    <td>
                                        @{
                                            var idd = @item.Id;
                                        }

                                        @* <a asp-controller="ConductOfInspections" asp-action="Create">INSPECT</a>*@

                                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id" id="getId">INSPECT</a>
                                        @*<a class="btn btn-warning" onclick="inspectItem(@item.Id)">INSPECT</a>*@



                                        @*<form method="post" action="/ReceivingReports/actionResult">
                                <input type="hidden" name="Id" value="@idd" />
                                <button type="submit" class="btn btn-primary">Inspect</button>
                                </form>*@


                                        @*  <a class="btn btn-warning inspect-button" data-id="@item.Id">INSPECT</a>*@

                                    </td>
                                }
                                @if (User.IsInRole("MeatEstablishmentRepresentative"))
                                {
                                    <td>
                                        <div class="btn-group">
                                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                        </div>
                                    </td>
                                }

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <br />



        <script>
            //filters
            window.onload = function () {
                var filtersContainer = document.getElementById("filtersContainer");
                filtersContainer.style.display = "none"; // Start with filters hidden
            };

            function toggleFilters() {
                var filtersContainer = document.getElementById("filtersContainer");
                var toggleFiltersButton = document.getElementById("toggleFiltersButton");
                var filterIcon = toggleFiltersButton.querySelector("i.bx-filter-alt");

                if (filtersContainer.style.display === "none") {
                    filtersContainer.style.display = "flex";
                    filterIcon.style.display = "inline";
                    toggleFiltersButton.innerHTML = "Hide Filters <i class='bx bx-filter-alt'></i>";
                } else {
                    filtersContainer.style.display = "none";
                    filterIcon.style.display = "inline";
                    toggleFiltersButton.innerHTML = "Show Filters <i class='bx bx-filter-alt'></i>";
                }
            }

            $(document).ready(function () {
                $('.inspect-button').click(function () {
                    var id = $(this).data('id');
                    $('#selectedId').val(id); // Set the ID in the hidden input field
                    window.location.href = '/ConductOfInspections/Create'; // Navigate to the Create.cshtml file
                });
            });


        </script>

        <script>
            $(document).ready(function () {

                $('#searchInput').on('input', function () {
                    var searchText = $(this).val().toLowerCase();
                    $('.filter-item').each(function () {
                        var rowText = $(this).text().toLowerCase();
                        if (rowText.indexOf(searchText) === -1) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                });
            });
        </script>
    </main>
</section>